{"version":3,"sources":["types/FilterRoutes.ts","api/users.ts","api/todos.ts","components/Error/index.ts","components/Error/Error.tsx","components/TodoItem/index.ts","components/TodoItem/TodoItem.tsx","components/TodoList/index.ts","components/TodoList/TodoList.tsx","components/TodosFilter/index.ts","components/TodosFilter/TodosFilter.tsx","App.tsx","index.tsx"],"names":["FilterRoutes","API_URL","USER_ID","getUser","userId","a","fetch","response","ok","json","getTodos","Error","status","postTodo","todo","headers","method","body","JSON","stringify","patchTodo","todoId","deleteTodo","message","className","TodoItem","React","memo","setTodos","useState","error","setError","editing","setEditing","title","setTitle","editRef","useRef","document","createElement","errorHandler","useCallback","setTimeout","toggleCompleted","id","completed","then","catch","destroyTodo","enableEditing","applyTitle","handleKeyPress","event","key","useEffect","current","focus","classNames","type","checked","onChange","onDoubleClick","onClick","ref","value","target","onBlur","onKeyDown","TodoList","todos","map","TodosFilter","path","element","All","to","Active","filter","Completed","App","isLoading","setLoading","user","setUser","input","setInput","activeTodos","useMemo","placeholder","userFromServer","addTodo","preventDefault","toggleAll","newTodos","length","forEach","push","clearCompleted","name","onSubmit","htmlFor","isActive","selected","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.560a0312.chunk.js","sourcesContent":["export enum FilterRoutes {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","const API_URL = 'https://mate.academy/students-api/users';\n\nexport const USER_ID = 2451;\n\nconst user = {\n  name: 'Valerie Troitska',\n  username: 'trtskvalerie',\n  email: 'val@mymail.moc',\n  phone: '800851337',\n};\n\nexport const getUser = async (userId: number): Promise<User> => {\n  const response = await fetch(`${API_URL}/${userId}`);\n\n  return response.ok ? response.json() : null;\n};\n\nexport const postUser = async (): Promise<User> => {\n  const response = await fetch(API_URL, {\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    method: 'POST',\n    body: JSON.stringify(user),\n  });\n\n  return response.json();\n};\n","const API_URL = 'https://mate.academy/students-api/todos';\n\ntype Patch = {\n  completed?: boolean,\n  title?: string,\n};\n\nexport const getTodos = async (userId: number): Promise<Todo[]> => {\n  const response = await fetch(`${API_URL}?userId=${userId}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const postTodo = async (todo: TodoToPost): Promise<Todo> => {\n  const response = await fetch(`${API_URL}`, {\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    method: 'POST',\n    body: JSON.stringify(todo),\n  });\n\n  if (!response.ok) {\n    throw new Error(`${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const patchTodo = async (todoId: number, body: Patch): Promise<Todo> => {\n  const response = await fetch(`${API_URL}/${todoId}`, {\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    method: 'PATCH',\n    body: JSON.stringify(body),\n  });\n\n  if (!response.ok) {\n    throw new Error(`${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const deleteTodo = async (todoId: number): Promise<Todo> => {\n  const response = await fetch(`${API_URL}/${todoId}`, { method: 'DELETE' });\n\n  if (!response.ok) {\n    throw new Error(`${response.status}`);\n  }\n\n  return response.json();\n};\n","import { Error } from './Error';\n\nexport default Error;\n","import React from 'react';\n\nimport './Error.css';\n\ntype Props = {\n  message: string,\n};\n\nexport const Error: React.FC<Props> = ({ message }) => (\n  <p className=\"Error\">{`${message}`}</p>\n);\n","import { TodoItem } from './TodoItem';\n\nexport default TodoItem;\n","/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\n\nimport { USER_ID } from '../../api/users';\nimport { deleteTodo, getTodos, patchTodo } from '../../api/todos';\n\nimport Error from '../Error';\n\ntype Props = {\n  todo: Todo,\n  setTodos: (todos: Todo[]) => void,\n};\n\nexport const TodoItem: React.FC<Props> = React.memo(({ todo, setTodos }) => {\n  const [error, setError] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [title, setTitle] = useState(todo.title);\n\n  const editRef = useRef(document.createElement('input'));\n\n  const errorHandler = useCallback(() => {\n    setError(true);\n    setTimeout(() => setError(false), 1500);\n  }, []);\n\n  const toggleCompleted = useCallback(() => {\n    patchTodo(todo.id, { completed: !todo.completed })\n      .then(() => getTodos(USER_ID))\n      .then(setTodos)\n      .catch(errorHandler);\n  }, [todo]);\n\n  const destroyTodo = useCallback(() => {\n    deleteTodo(todo.id)\n      .then(() => getTodos(USER_ID))\n      .then(setTodos)\n      .catch(() => {\n        setError(true);\n        setTimeout(() => setError(false), 1000);\n      });\n  }, [todo]);\n\n  const enableEditing = useCallback(() => {\n    setEditing(true);\n  }, []);\n\n  const applyTitle = useCallback(() => {\n    if (!title) {\n      deleteTodo(todo.id)\n        .then(() => getTodos(USER_ID))\n        .then(setTodos)\n        .catch(() => {\n          setTitle(todo.title);\n          errorHandler();\n        });\n    } else {\n      setEditing(false);\n      patchTodo(todo.id, { title })\n        .then(() => getTodos(USER_ID))\n        .then(setTodos)\n        .catch(() => {\n          setTitle(todo.title);\n          errorHandler();\n        });\n    }\n  }, [title]);\n\n  const handleKeyPress = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      switch (event.key) {\n        case 'Enter':\n          applyTitle();\n          break;\n\n        case 'Escape':\n          setEditing(false);\n          setTitle(todo.title);\n          break;\n\n        default:\n          break;\n      }\n    },\n    [todo],\n  );\n\n  useEffect(() => {\n    if (editing) {\n      editRef.current.focus();\n    }\n  }, [editing]);\n\n  return (\n    <>\n      <li\n        key={todo.id}\n        className={classNames(\n          { completed: todo.completed },\n          { editing },\n        )}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            onChange={toggleCompleted}\n          />\n\n          <label onDoubleClick={enableEditing}>{todo.title}</label>\n\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={destroyTodo}\n          />\n        </div>\n        <input\n          type=\"text\"\n          className=\"edit\"\n          ref={editRef}\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          onBlur={applyTitle}\n          onKeyDown={handleKeyPress}\n        />\n      </li>\n      {error && <Error message=\"Server error: try again later\" />}\n    </>\n  );\n});\n","import { TodoList } from './TodoList';\n\nexport default TodoList;\n","import React from 'react';\nimport TodoItem from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  setTodos: (todos: Todo[]) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, setTodos }) => {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem todo={todo} setTodos={setTodos} key={todo.id} />\n      ))}\n    </ul>\n  );\n};\n","import { TodosFilter } from './TodosFilter';\n\nexport default TodosFilter;\n","import React from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\n\nimport TodoList from '../TodoList';\n\nimport { FilterRoutes } from '../../types/FilterRoutes';\n\ntype Props = {\n  todos: Todo[],\n  setTodos: (todos: Todo[]) => void,\n};\n\nexport const TodosFilter: React.FC<Props> = React.memo(({ todos, setTodos }) => (\n  <Routes>\n    <Route path=\"/\" element={<TodoList todos={todos} setTodos={setTodos} />} />\n    <Route path={FilterRoutes.All} element={<Navigate to=\"/\" />} />\n    <Route\n      path={FilterRoutes.Active}\n      element={(\n        <TodoList\n          todos={todos.filter(todo => !todo.completed)}\n          setTodos={setTodos}\n        />\n      )}\n    />\n    <Route\n      path={FilterRoutes.Completed}\n      element={(\n        <TodoList\n          todos={todos.filter(todo => todo.completed)}\n          setTodos={setTodos}\n        />\n      )}\n    />\n\n    <Route path=\"*\" element={<Navigate to=\"/\" />} />\n  </Routes>\n));\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { USER_ID, getUser } from './api/users';\nimport {\n  deleteTodo,\n  getTodos,\n  postTodo,\n  patchTodo,\n} from './api/todos';\n\nimport { FilterRoutes } from './types/FilterRoutes';\n\nimport TodosFilter from './components/TodosFilter';\nimport Error from './components/Error';\n\nconst App: React.FC = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [input, setInput] = useState('');\n\n  const activeTodos = useMemo(() => (\n    todos.filter(todo => !todo.completed)\n  ), [todos]);\n\n  const placeholder = useMemo(() => (\n    isLoading ? 'Loading...' : 'Server error: couldn\\'t load user'\n  ), [isLoading]);\n\n  const errorHandler = useCallback(() => {\n    setError(true);\n    setTimeout(() => setError(false), 1500);\n  }, []);\n\n  useEffect(() => {\n    getTodos(USER_ID)\n      .then(setTodos)\n      .catch(errorHandler);\n\n    getUser(USER_ID)\n      .then(userFromServer => {\n        setUser(userFromServer);\n        setLoading(false);\n      });\n  }, []);\n\n  const addTodo = useCallback((event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newTodo: TodoToPost = {\n      userId: USER_ID,\n      title: input,\n      completed: false,\n    };\n\n    postTodo(newTodo)\n      .then(() => {\n        setInput('');\n        getTodos(USER_ID).then(setTodos);\n      })\n      .catch(errorHandler);\n  }, [input]);\n\n  const toggleAll = useCallback(() => {\n    const newTodos: Todo[] = [];\n\n    if (activeTodos.length === 0 || activeTodos.length === todos.length) {\n      todos.forEach(todo => {\n        newTodos.push({ ...todo, completed: !todo.completed });\n        patchTodo(todo.id, { completed: !todo.completed })\n          .catch(errorHandler);\n      });\n    } else {\n      todos.forEach(todo => {\n        if (!todo.completed) {\n          newTodos.push({ ...todo, completed: true });\n          patchTodo(todo.id, { completed: true })\n            .catch(errorHandler);\n        } else {\n          newTodos.push(todo);\n        }\n      });\n    }\n\n    setTodos(newTodos);\n  }, [todos, activeTodos]);\n\n  const clearCompleted = useCallback(() => {\n    const newTodos: Todo[] = [];\n\n    todos.forEach(todo => {\n      if (todo.completed) {\n        deleteTodo(todo.id)\n          .catch(errorHandler);\n      } else {\n        newTodos.push(todo);\n      }\n    });\n\n    setTodos(newTodos);\n  }, [todos]);\n\n  return (\n    <>\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>\n            {user\n              ? `${user.name} todos`\n              : placeholder}\n          </h1>\n\n          <form onSubmit={addTodo}>\n            <input\n              type=\"text\"\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={input}\n              onChange={(event) => {\n                if (error) {\n                  setError(false);\n                }\n\n                setInput(event.target.value);\n              }}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={toggleAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          {todos.length > 0 && <TodosFilter todos={todos} setTodos={setTodos} />}\n        </section>\n\n        {todos.length > 0 && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${activeTodos.length} items left`}\n            </span>\n\n            <ul className=\"filters\">\n              <li>\n                <NavLink\n                  to=\"/\"\n                  className={({ isActive }) => classNames({ selected: isActive })}\n                >\n                  All\n                </NavLink>\n              </li>\n\n              <li>\n                <NavLink\n                  to={`/${FilterRoutes.Active}`}\n                  className={({ isActive }) => classNames({ selected: isActive })}\n                >\n                  Active\n                </NavLink>\n              </li>\n\n              <li>\n                <NavLink\n                  to={`/${FilterRoutes.Completed}`}\n                  className={({ isActive }) => classNames({ selected: isActive })}\n                >\n                  Completed\n                </NavLink>\n              </li>\n            </ul>\n\n            {activeTodos.length !== todos.length && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={clearCompleted}\n              >\n                Clear completed\n              </button>\n            )}\n          </footer>\n        )}\n      </section>\n\n      {error && <Error message=\"Server error: try again later\" />}\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}